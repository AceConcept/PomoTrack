version: 2.1

orbs:
  github-cli: circleci/github-cli@2.0
  macos: circleci/macos@2.5.2
  windows: circleci/windows@5

jobs:
  test-basic:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Run packages audit and lint
          command: ./docker/test_basic.sh
  test-cypress:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Build & run production Docker image
          command: ./docker/prod.sh -d
      - run:
          name: Run cypress browser tests against production container
          command: ./docker/test_cypress.sh
      - run:
          name: Stop production Docker contianer
          command: docker stop pomotrack-prod

  create-release:
    docker:
      - image: cimg/node:20.11
    steps:
      - checkout
      - github-cli/setup
      - run:
          name: Extract version and create release
          command: |
            # Get the version from package.json
            VERSION=$(node -p "require('./package.json').version")
            
            # Get the latest commit message
            COMMIT_MSG=$(git log -1 --pretty=%B)
            
            # Create a draft release using gh cli
            gh release create "$VERSION" \
              --draft \
              --title "v$VERSION" \
              --notes "## What's Changed
            
              $COMMIT_MSG"
  
  build-web:
    docker:
      - image: cimg/node:18.20.5
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - add_ssh_keys:
          fingerprints:
            - "SHA256:NDKPWa+kMya3u32KAI0pfVcWCqpaTWqK4Nzr+8Pegh8"
      - checkout
      - run:
          name: Build GitHub Pages
          command: ./docker/gh-pages.sh
      - run:
          name: Publish to GitHub Pages
          command: |
            npm install gh-pages@6.3.0 -g
            git config user.email "dtom90@users.noreply.github.com"
            git config user.name "David Thomason"
            npx gh-pages --dist dist_web --dotfiles --no-history --message "GitHub Pages"

  build-mac:
    macos:
      xcode: 16.1.0
    steps:
      - macos/install-rosetta
      - run:
          name: Install NVM
          command: |
            set +e
            wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
      - checkout
      - run:
          name: Install Node
          command: |
            set +e
            nvm install v18.20.5
            nvm alias default v18.20.5
      - run:
          name: Install dependencies
          command: |
            set +e
            pip install setuptools
            yarn
      - run:
          name: Reset xcode selection
          command: sudo xcode-select -r
      - run:
          name: Build macOS app
          command: yarn run electron:release:mac

  build-windows:
    executor:
      name: windows/default
      size: medium
    steps:
      - checkout
      - run:
          name: Install NVM
          command: |
            $webClient = New-Object System.Net.WebClient
            $webClient.DownloadFile("https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "$env:TEMP\install.sh")
            bash $env:TEMP\install.sh
      - run:
          name: Install Node
          command: |
            . ~/.nvm/nvm.sh
            nvm install v18.20.5
            nvm use v18.20.5
            npm install -g yarn
      - run:
          name: Install dependencies
          command: |
            . ~/.nvm/nvm.sh
            nvm use v18.20.5
            yarn install
      - run:
          name: Build Windows app
          command: |
            . ~/.nvm/nvm.sh
            nvm use v18.20.5
            yarn run electron:release:win

workflows:
  version: 2
  test:
    jobs:
      - test-basic:
          filters:
            branches:
              ignore:
                - master
                - gh-pages
      - test-cypress:
          filters:
            branches:
              ignore:
                - master
                - gh-pages
  release-workflow:
    jobs:
      - create-release:
          filters:
            branches:
              only: master
      - build-web:
          filters:
            branches:
              only:
                - master
      - build-mac:
          requires:
            - create-release
          filters:
            branches:
              only:
                - master
      - build-windows:
          requires:
            - create-release
          filters:
            branches:
              only:
                - master
